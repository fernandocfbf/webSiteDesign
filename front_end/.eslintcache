[{"C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\index.js":"1","C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\App.js":"2","C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\routes.jsx":"3","C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\views\\home.jsx":"4","C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\reportWebVitals.js":"5","C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\html\\header.js":"6","C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\html\\footer.js":"7","C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\views\\machineLearning.jsx":"8","C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\functions\\resumeImport.js":"9","C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\functions\\processDate.js":"10","C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\functions\\toDate.js":"11"},{"size":514,"mtime":1610134688866,"results":"12","hashOfConfig":"13"},{"size":212,"mtime":1610134591994,"results":"14","hashOfConfig":"13"},{"size":627,"mtime":1611361004694,"results":"15","hashOfConfig":"13"},{"size":6257,"mtime":1611423525518,"results":"16","hashOfConfig":"13"},{"size":362,"mtime":1610134648978,"results":"17","hashOfConfig":"13"},{"size":1480,"mtime":1611423521494,"results":"18","hashOfConfig":"13"},{"size":2045,"mtime":1610142186678,"results":"19","hashOfConfig":"13"},{"size":11486,"mtime":1611273471535,"results":"20","hashOfConfig":"13"},{"size":511,"mtime":1610397642482,"results":"21","hashOfConfig":"13"},{"size":310,"mtime":1610398084748,"results":"22","hashOfConfig":"13"},{"size":675,"mtime":1610579941729,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"11klthv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\index.js",[],["51","52"],"C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\App.js",[],"C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\routes.jsx",[],"C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\views\\home.jsx",["53","54","55","56","57","58","59","60","61","62","63","64"],"C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\reportWebVitals.js",[],"C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\html\\header.js",["65","66","67","68","69","70","71"],"C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\html\\footer.js",["72","73","74"],"import { Component, React } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport {\r\n    InstagramOutlined, GithubOutlined, FacebookOutlined,\r\n    LinkedinOutlined, GoogleOutlined, PhoneOutlined\r\n} from '@ant-design/icons'\r\n\r\nimport { Typography } from 'antd';\r\n\r\n\r\n\r\nimport '../css/footer.css'\r\n\r\nexport default class Footer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { Title, Paragraph, Text, Link } = Typography;\r\n\r\n        return (\r\n            <div className=\"footer\">\r\n                <Text className=\"autor\">\r\n                    Designed and produced by Fernando Fincatti\r\n                </Text>\r\n\r\n                <div className=\"footer_grid\">\r\n                    <Text className=\"aboutUs\">About us</Text>\r\n\r\n                    <Paragraph className=\"aboutUs_descricao\">\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Exercitationem ipsam dicta natus harum possimus magni vel ab,\r\n                        nihil voluptatem nulla commodi maiores, eligendi aspernatur cumque debitis explicabo rem\r\n                        distinctio! Nisi.\r\n                    </Paragraph>\r\n\r\n                    <Text className=\"contactUs\"> Contact Us</Text>\r\n                    <div className=\"non_media1\">\r\n                        <GoogleOutlined />\r\n                        <Paragraph className=\"text_footer\">fincattifernando@gmail.com</Paragraph>\r\n                    </div>\r\n                    <div className=\"non_media2\">\r\n                        <PhoneOutlined />\r\n                        <Paragraph className=\"text_footer\">(11)96036-1402</Paragraph>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"media\">\r\n                    <InstagramOutlined />\r\n                    <GithubOutlined />\r\n                    <FacebookOutlined />\r\n                    <LinkedinOutlined />\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\views\\machineLearning.jsx",["75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92"],"import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { message, Divider, Table, Typography, Steps, Button, DatePicker } from 'antd';\r\nimport { LoadingOutlined, CheckCircleTwoTone, CloseCircleTwoTone, DownloadOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../css/machinelearning.css'\r\n\r\nimport Header from '../html/header'\r\nimport Footer from '../html/footer'\r\nimport * as XLSX from 'xlsx';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nvar functionresumeImport = require(\"../functions/resumeImport\")\r\nvar functionprocessDate = require(\"../functions/processDate\")\r\nvar functiontoDate = require(\"../functions/toDate\")\r\n\r\nexport default class MachineLearning extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            data: [],\r\n            data_filter: [],\r\n            file_name: '',\r\n            data_classificados: [],\r\n            loading: false,\r\n            step1: \"wait\",\r\n            step2: \"wait\",\r\n            step3: \"wait\",\r\n        }\r\n\r\n        this.readExcel = this.readExcel.bind(this)\r\n        this.filtroData = this.filtroData.bind(this)\r\n        this.processar = this.processar.bind(this)\r\n        this.download = this.download.bind(this)\r\n    }\r\n\r\n    //função resposável por ler o arquivo excel\r\n    async readExcel(file) {\r\n\r\n        try {\r\n            await this.setState({ file_name: file.name, loading: true })\r\n\r\n            const promise = new Promise((resolve, reject) => {\r\n\r\n                //o arquvio é lido pelo fileReader\r\n                const fileReader = new FileReader()\r\n                fileReader.readAsArrayBuffer(file)\r\n\r\n                //quando estiver pronto...\r\n                fileReader.onload = (e) => {\r\n\r\n                    try {\r\n                        const bufferArray = e.target.result\r\n\r\n                        const wb = XLSX.read(bufferArray, { type: 'buffer' })\r\n\r\n                        //pega o nome do primeiro workSheet(planilha)\r\n                        const wsname = wb.SheetNames[0]\r\n\r\n                        const ws = wb.Sheets[wsname]\r\n\r\n                        //converte os dados para json\r\n                        const data = XLSX.utils.sheet_to_json(ws)\r\n\r\n                        resolve(data)\r\n                    } catch {\r\n                        this.setState({ loading: \"crash\" })\r\n                        message.error(\"Extensão inválida!\")\r\n                    }\r\n\r\n                    //caso tenha algum erro no arquivo...\r\n                    fileReader.onerror = ((error) => {\r\n                        reject(error)\r\n                    })\r\n                }\r\n            })\r\n\r\n            promise.then((d) => {\r\n                if (d[0]['Data'] == undefined && d[0][\"HTML\"] == undefined) {\r\n\r\n                    this.setState({ loading: \"crash\", data: [], data_filter: [] })\r\n                    message.error(\"Conteúdo inválido!\")\r\n\r\n                } else {\r\n\r\n                    var d_filtered = functionresumeImport(d)\r\n\r\n                    this.setState({ data: d, data_filter: d_filtered, loading: \"done\", step1: \"finish\" })\r\n                    message.success(\"Arquivo importado com sucesso!\")\r\n                }\r\n\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    //função responsável por filtrar os dados\r\n    async filtroData(datas) {\r\n\r\n        console.log(datas)\r\n\r\n        //apenas para que enquanto o back não responda,\r\n        //a tabela entre em estado de loading\r\n        await this.setState({ loading: true })\r\n\r\n        //caso o valor do filtro seja nulo, o usuário removeu os filtros de data\r\n        if (datas == null || datas == undefined) {\r\n\r\n            //as informações são iguais\r\n            var new_data = this.state.data\r\n\r\n        } else {\r\n\r\n            var data1 = functionprocessDate(datas[0])   //pega a data de início\r\n            var data2 = functionprocessDate(datas[1])  //pega a data de fim\r\n\r\n            var data = this.state.data //pega as info atuais\r\n            var new_data = [] //variavel que amarzenará as info filtradas\r\n\r\n            for (var i = 0; i < data.length; i++) {\r\n\r\n                var valor_data = functiontoDate(data[i].Data) //valor da data\r\n\r\n                //se a informação estiver entre as datas desejadas...\r\n                if (valor_data.getTime() >= data1.getTime() && valor_data.getTime() <= data2.getTime()) {\r\n                    new_data.push(data[i])\r\n                }\r\n            }\r\n        }\r\n\r\n        new_data = functionresumeImport(new_data)\r\n\r\n        this.setState({ loading: false, data_filter: new_data })\r\n    }\r\n\r\n    //função resposável por executar o algorítimo de machine learning\r\n    async processar() {\r\n\r\n        this.setState({ loading: true })\r\n\r\n        var data_to_send = []\r\n\r\n        for (var i = 0; i < this.state.data_filter.length; i++) {\r\n            data_to_send.push({ \"HTML\": this.state.data_filter[i][\"HTML\"] })\r\n        }\r\n\r\n        var inicio = 0\r\n        var fim = 40\r\n\r\n        for (var i = 0; i < data_to_send.length / 40; i++) {\r\n\r\n            console.log(\"rodada: \", i, \" || \", data_to_send.length / 40)\r\n\r\n            await this.setState({ loading: true })\r\n\r\n            await axios.post('http://localhost:3000/machineLearning', { manchetes: data_to_send.slice(inicio, fim) })\r\n                .then(resp => {\r\n                    if (Math.floor(resp.status / 100) === 2) {\r\n                        console.log(\"DATA: \", typeof resp.data, resp.data)\r\n                        console.log(eval('(' + resp.data + ')'))\r\n\r\n                        if (resp.data != false) {\r\n                            var new_data = this.state.data_classificados.concat(eval('(' + resp.data + ')'))\r\n                            this.setState({ loading: false, data_classificados: new_data })\r\n                        }\r\n                    }\r\n                }).catch((err) => {\r\n                    console.log(err)\r\n                })\r\n\r\n            inicio += 40\r\n            fim += 40\r\n        }\r\n\r\n        if (this.state.data_classificados.length == 0) {\r\n            message.info(\"Nenhuma manchete relevante encontrada!\")\r\n            this.setState({ step2: \"finish\", step3: \"finish\", loading: false})\r\n        } else {\r\n            this.setState({ step2: \"finish\" })\r\n        }\r\n\r\n    }\r\n\r\n    //função reponsável pelo download\r\n    download() {\r\n        this.setState({ step3: \"finish\" })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { Title, Paragraph, Text, Link } = Typography;\r\n        const { RangePicker } = DatePicker;\r\n        const { Step } = Steps;\r\n\r\n        if (this.state.data_classificados.length == 0) {\r\n            var disabled = true\r\n        } else { disabled = false }\r\n\r\n        console.log(this.state)\r\n\r\n\r\n        var col = [\r\n            {\r\n                title: \"Data\",\r\n                dataIndex: \"Data\"\r\n            },\r\n            {\r\n                title: \"Remetente\",\r\n                dataIndex: \"De\"\r\n            },\r\n            {\r\n                title: \"HTML\",\r\n                dataIndex: \"HTML_\"\r\n            },\r\n            {\r\n                title: \"Resumo\",\r\n                dataIndex: \"Resumo_\"\r\n            },\r\n        ]\r\n\r\n        //cria o ícone do arquivo de acordo com o status\r\n        if (this.state.loading == true) {\r\n            var file_status = (\r\n                <LoadingOutlined className=\"icon_input\" />\r\n            )\r\n        } else if (this.state.loading == \"done\") {\r\n\r\n            var file_status = (\r\n                <CheckCircleTwoTone className=\"icon_input\" twoToneColor=\"#52c41a\" />\r\n            )\r\n        } else if (this.state.loading == \"crash\") {\r\n            var file_status = (\r\n                <CloseCircleTwoTone className=\"icon_input\" twoToneColor=\"#ff0000\" />\r\n            )\r\n        }\r\n\r\n        //se não tem dados, não habilita o rangePicker\r\n        if (this.state.data.length == 0) {\r\n            var range = true\r\n        } else { range = false }\r\n\r\n        return (\r\n            <div>\r\n                <Header></Header>\r\n\r\n                <div className=\"status_machine\">\r\n                    <Steps>\r\n\r\n                        <Step status={this.state.step1} title=\"Importar arquivo\" />\r\n                        <Step status={this.state.step2} title=\"Processamento de dados\" />\r\n                        <Step status={this.state.step3} title=\"Download\" />\r\n                    </Steps>\r\n                </div>\r\n\r\n                <Table\r\n                    className=\"table_machine\"\r\n                    columns={col}\r\n                    dataSource={this.state.data_filter}\r\n                    pagination={false}\r\n                    loading={this.state.loading}\r\n                    scroll={{\r\n                        y: 300\r\n                    }}\r\n\r\n                    title={() =>\r\n                        <div className=\"title_machine\">\r\n                            <div className=\"load_file_input\">\r\n                                <input type='file' name=\"file\" accept='.xlsx' id=\"file\" className=\"inputfile\" onChange={(e) => {\r\n                                    const file = e.target.files[0]\r\n                                    this.readExcel(file)\r\n                                }} />\r\n                                <label for=\"file\">Carregar</label>\r\n\r\n                                <div className=\"file_name_input\">\r\n                                    <Text className=\"text_input\"> {this.state.file_name} </Text>\r\n                                    {file_status}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <RangePicker\r\n                                disabled={range}\r\n                                className=\"range_machine\"\r\n                                format={\"DD/MM/YYYY\"}\r\n                                onChange={this.filtroData}\r\n                            />\r\n                        </div>\r\n                    }>\r\n\r\n                </Table>\r\n\r\n                <Divider orientation=\"left\" plain>\r\n                    Processamento\r\n                </Divider>\r\n\r\n                <div className=\"process_text_machine\">\r\n                    <Paragraph >\r\n                        Lorem, ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Commodi voluptatem libero aut molestias beatae iste.\r\n                        Maxime enim sequi, laborum, fugiat veritatis libero, inventore amet necessitatibus aliquid\r\n                        velit natus vero aut!\r\n                    </Paragraph>\r\n                </div>\r\n\r\n                <Button\r\n                    type=\"primary\"\r\n                    className=\"button_machine\"\r\n                    onClick={this.processar}>\r\n                    Processar\r\n                </Button>\r\n\r\n                <Button\r\n                    type=\"primary\"\r\n                    className='download_button'\r\n                    style={{marginLeft: \"30px\"}}\r\n                    icon={<DownloadOutlined />}\r\n                    disabled={disabled}\r\n                    onClick={this.download}>\r\n                    <CSVLink\r\n                        className='download_button'\r\n                        filename={\"manchetes_classificadas.csv\"}\r\n                        data={this.state.data_classificados}>\r\n                        Download\r\n                    </CSVLink>\r\n                </Button>\r\n\r\n                <Footer></Footer>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\functions\\resumeImport.js",[],"C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\functions\\processDate.js",["93"],"function process(date){\r\n\r\n    var date = new Date(date).toLocaleDateString('pt-br', {\r\n        day: '2-digit',\r\n        month: '2-digit',\r\n        year: 'numeric',\r\n    })\r\n\r\n    var parts = date.toString().split(\"/\");\r\n\r\n    return new Date(parts[2], parts[1] - 1, parts[0]);\r\n }\r\n\r\n module.exports = process","C:\\Users\\ferna\\Documents\\Insper\\Metricis\\WebSite\\webSiteDesign\\front_end\\src\\functions\\toDate.js",["94"],"function toDate(date) {\r\n\r\n    const monthNames = {\r\n        \"January\": 0, \r\n        \"February\": 1, \r\n        \"March\": 2, \r\n        \"April\": 3, \r\n        \"May\": 4, \r\n        \"June\": 5,\r\n        \"July\": 6, \r\n        \"August\": 7, \r\n        \"September\": 8, \r\n        \"October\": 9, \r\n        \"November\": 10, \r\n        \"December\": 11\r\n}\r\n\r\n    for (var i = 0; i < date.length; i++) {\r\n\r\n        if (date[i] == \" \") {\r\n            var resp = date.slice(0, i + 1)\r\n        }\r\n    }\r\n\r\n    const [dia, mes_fake, ano] = resp.split(\"-\")\r\n\r\n    const mes = monthNames[mes_fake]\r\n\r\n    const data_resp = new Date(ano, mes, dia)\r\n\r\n    return data_resp\r\n    \r\n}\r\n\r\nmodule.exports = toDate",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":3,"column":20,"nodeType":"101","messageId":"102","endLine":3,"endColumn":27},{"ruleId":"99","severity":1,"message":"103","line":3,"column":45,"nodeType":"101","messageId":"102","endLine":3,"endColumn":55},{"ruleId":"99","severity":1,"message":"104","line":3,"column":57,"nodeType":"101","messageId":"102","endLine":3,"endColumn":63},{"ruleId":"99","severity":1,"message":"105","line":12,"column":8,"nodeType":"101","messageId":"102","endLine":12,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":33,"column":29,"nodeType":"108","messageId":"109","endLine":33,"endColumn":31},{"ruleId":"110","severity":1,"message":"111","line":60,"column":29,"nodeType":"112","endLine":60,"endColumn":72},{"ruleId":"113","severity":1,"message":"114","line":71,"column":64,"nodeType":"112","endLine":71,"endColumn":67},{"ruleId":"113","severity":1,"message":"114","line":72,"column":64,"nodeType":"112","endLine":72,"endColumn":67},{"ruleId":"110","severity":1,"message":"111","line":78,"column":21,"nodeType":"112","endLine":78,"endColumn":74},{"ruleId":"110","severity":1,"message":"111","line":95,"column":45,"nodeType":"112","endLine":95,"endColumn":84},{"ruleId":"110","severity":1,"message":"111","line":109,"column":45,"nodeType":"112","endLine":109,"endColumn":90},{"ruleId":"110","severity":1,"message":"111","line":122,"column":45,"nodeType":"112","endLine":122,"endColumn":85},{"ruleId":"99","severity":1,"message":"115","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":13},{"ruleId":"99","severity":1,"message":"116","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":15},{"ruleId":"99","severity":1,"message":"103","line":6,"column":17,"nodeType":"101","messageId":"102","endLine":6,"endColumn":27},{"ruleId":"99","severity":1,"message":"104","line":6,"column":29,"nodeType":"101","messageId":"102","endLine":6,"endColumn":35},{"ruleId":"106","severity":1,"message":"107","line":29,"column":29,"nodeType":"108","messageId":"109","endLine":29,"endColumn":31},{"ruleId":"113","severity":1,"message":"114","line":43,"column":51,"nodeType":"112","endLine":43,"endColumn":80},{"ruleId":"113","severity":1,"message":"114","line":44,"column":51,"nodeType":"112","endLine":44,"endColumn":80},{"ruleId":"99","severity":1,"message":"115","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":13},{"ruleId":"99","severity":1,"message":"117","line":26,"column":17,"nodeType":"101","messageId":"102","endLine":26,"endColumn":22},{"ruleId":"99","severity":1,"message":"118","line":26,"column":41,"nodeType":"101","messageId":"102","endLine":26,"endColumn":45},{"ruleId":"106","severity":1,"message":"119","line":81,"column":34,"nodeType":"108","messageId":"109","endLine":81,"endColumn":36},{"ruleId":"106","severity":1,"message":"119","line":81,"column":63,"nodeType":"108","messageId":"109","endLine":81,"endColumn":65},{"ruleId":"106","severity":1,"message":"119","line":110,"column":36,"nodeType":"108","messageId":"109","endLine":110,"endColumn":38},{"ruleId":"120","severity":1,"message":"121","line":121,"column":17,"nodeType":"101","messageId":"122","endLine":121,"endColumn":25},{"ruleId":"120","severity":1,"message":"123","line":153,"column":18,"nodeType":"101","messageId":"122","endLine":153,"endColumn":19},{"ruleId":"124","severity":1,"message":"125","line":163,"column":37,"nodeType":"126","messageId":"109","endLine":163,"endColumn":41},{"ruleId":"106","severity":1,"message":"107","line":165,"column":39,"nodeType":"108","messageId":"109","endLine":165,"endColumn":41},{"ruleId":"124","severity":1,"message":"125","line":166,"column":81,"nodeType":"126","messageId":"109","endLine":166,"endColumn":85},{"ruleId":"106","severity":1,"message":"119","line":178,"column":50,"nodeType":"108","messageId":"109","endLine":178,"endColumn":52},{"ruleId":"99","severity":1,"message":"117","line":194,"column":17,"nodeType":"101","messageId":"102","endLine":194,"endColumn":22},{"ruleId":"99","severity":1,"message":"118","line":194,"column":41,"nodeType":"101","messageId":"102","endLine":194,"endColumn":45},{"ruleId":"106","severity":1,"message":"119","line":198,"column":50,"nodeType":"108","messageId":"109","endLine":198,"endColumn":52},{"ruleId":"106","severity":1,"message":"119","line":225,"column":32,"nodeType":"108","messageId":"109","endLine":225,"endColumn":34},{"ruleId":"106","severity":1,"message":"119","line":229,"column":39,"nodeType":"108","messageId":"109","endLine":229,"endColumn":41},{"ruleId":"120","severity":1,"message":"127","line":231,"column":17,"nodeType":"101","messageId":"122","endLine":231,"endColumn":28},{"ruleId":"106","severity":1,"message":"119","line":234,"column":39,"nodeType":"108","messageId":"109","endLine":234,"endColumn":41},{"ruleId":"120","severity":1,"message":"127","line":235,"column":17,"nodeType":"101","messageId":"122","endLine":235,"endColumn":28},{"ruleId":"106","severity":1,"message":"119","line":241,"column":36,"nodeType":"108","messageId":"109","endLine":241,"endColumn":38},{"ruleId":"120","severity":1,"message":"128","line":3,"column":9,"nodeType":"101","messageId":"122","endLine":3,"endColumn":13},{"ruleId":"106","severity":1,"message":"119","line":20,"column":21,"nodeType":"108","messageId":"109","endLine":20,"endColumn":23},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'Button' is defined but never used.","'Header' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'axios' is defined but never used.","'Table' is defined but never used.","'Title' is assigned a value but never used.","'Link' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-redeclare","'new_data' is already defined.","redeclared","'i' is already defined.","no-eval","eval can be harmful.","CallExpression","'file_status' is already defined.","'date' is already defined.","no-global-assign","no-unsafe-negation"]